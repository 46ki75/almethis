---
import { createHighlighter } from 'shiki'

interface CodeBlockProps {
  code: string
  language?: string
}

const { code, language = 'plaintext' } = Astro.props as CodeBlockProps

const highlighter = await createHighlighter({
  langs: [language],
  themes: ['vitesse-light', 'vitesse-dark']
})

const html = highlighter.codeToHtml(code, {
  lang: language,
  themes: {
    dark: 'vitesse-dark',
    light: 'vitesse-light'
  },
  colorReplacements: {
    '#ffffff': 'transparent',
    '#121212': 'transparent'
  }
})
---

<pre class='pre'>
  <div class="code" set:html={html} />
</pre>

<style scoped lang='scss'>
  .pre {
    margin: 0;
    padding: 0;
  }

  .code {
    font-size: 16px;
    line-height: 24px;
  }
</style>

<style lang='scss'>
  .shiki,
  .shiki span {
    font-family: 'Source Code Pro', Menlo, Consolas, 'DejaVu Sans Mono',
      monospace !important;

    [data-theme='dark'] & {
      color: var(--shiki-dark) !important;
      background-color: var(--shiki-dark-bg) !important;
    }
  }
</style>
